#pragma checksum "C:\samples\Freela\FreelaEdson\FreelaEdson\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "471ff5c0c57f30cc1a6ea706680c38c228083049"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\samples\Freela\FreelaEdson\FreelaEdson\Views\_ViewImports.cshtml"
using FreelaEdson;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\samples\Freela\FreelaEdson\FreelaEdson\Views\_ViewImports.cshtml"
using FreelaEdson.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"471ff5c0c57f30cc1a6ea706680c38c228083049", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b845afc5da75a8d76765f76224c626f780fca045", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\samples\Freela\FreelaEdson\FreelaEdson\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"text-center\">\r\n    <h1 class=\"display-4\">Welcome</h1>\r\n    <p>Learn about <a href=\"https://docs.microsoft.com/aspnet/core\">building Web apps with ASP.NET Core</a>.</p>\r\n\r\n");
            WriteLiteral("\r\n    <button class=\"btn btn-success\" onclick=\"exportLLExcel()\">\r\n        Download\r\n    </button>\r\n</div>\r\n\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    <script>\r\n        function exportLLExcel() {\r\n\r\n            //Set the File URL.\r\n            var fileName = \'LLExport.xlsx\';\r\n            var url = \'");
#nullable restore
#line 25 "C:\samples\Freela\FreelaEdson\FreelaEdson\Views\Home\Index.cshtml"
                  Write(Url.Action("ExportLLExcel","Home",new { mainProjectId = ViewBag.MainProjectId}));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';

            $.ajax({
                type: 'POST',
                url: url,
                data: null,
                cache: false,
                xhr: function () {
                    var xhr = new XMLHttpRequest();
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState == 2) {
                            if (xhr.status == 200) {
                                xhr.responseType = ""blob"";
                            } else {
                                xhr.responseType = ""text"";
                            }
                        }
                    };
                    return xhr;
                },
                success: function (data) {
                    //Convert the Byte Data to BLOB object.
                    var blob = new Blob([data], { type: ""application/octetstream"" });

                    //Check the Browser type and download the File.
                    var isIE = false || !!document.documentMode;
 ");
                WriteLiteral(@"                   if (isIE) {
                        window.navigator.msSaveBlob(blob, fileName);
                    } else {
                        var url = window.URL || window.webkitURL;
                        link = url.createObjectURL(blob);
                        var a = $(""<a />"");
                        a.attr(""download"", fileName);
                        a.attr(""href"", link);
                        $(""body"").append(a);
                        a[0].click();
                        $(""body"").remove(a);
                    }
                }
            });

        }
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
